{"version":3,"sources":["components/ForecastContainer/DetailedForecast/DetailedForecast.module.css","components/HeaderContainer/HeaderContainer.module.css","components/HeaderContainer/Search/Search.module.css","components/ForecastContainer/MainForecast/MainForecast.module.css","components/NavBarContainer/NavBarContainer.module.css","components/ForecastContainer/ForecastContainer.module.css","components/common/Loading.module.css","components/ForecastContainer/DetailedForecast/Quote/Quote.module.css","components/ForecastContainer/TimeSetter/TimeSetter.module.css","utils/selectors.js","assets/loading.svg","assets/search-icon.svg","components/HeaderContainer/Search/Search.jsx","api/api.js","redux/appReducer.js","redux/forecastReducer.js","components/HeaderContainer/HeaderContainer.jsx","components/NavBarContainer/DayItem/DayItem.jsx","components/NavBarContainer/NavBarContainer.jsx","components/common/Loader.jsx","assets/detailed-forecast/wind.svg","assets/detailed-forecast/pressure.svg","assets/detailed-forecast/humidity.svg","assets/detailed-forecast/left-quote.svg","components/ForecastContainer/DetailedForecast/Quote/Quote.jsx","components/ForecastContainer/DetailedForecast/DetailedForecast.jsx","assets/weather-icons/cloudy.svg","assets/weather-icons/thunderstorm.svg","assets/weather-icons/drizzle.svg","assets/weather-icons/rainy.svg","assets/weather-icons/snowy.svg","assets/weather-icons/sun.svg","components/ForecastContainer/MainForecast/MainForecast.jsx","components/ForecastContainer/TimeSetter/TimeSetter.jsx","components/ForecastContainer/ForecastContainer.jsx","utils/animation.js","App.js","redux/store.js","index.js"],"names":["module","exports","getCurrentForecastData","state","forecast","currentForecastData","getRandomQuoteData","randomQuote","getInitialized","app","initialized","getCityName","city","getDate","date","getWeeklyForecastData","weeklyForecastData","getTimeMarks","timeMarks","getErrorMessage","errorMessage","getTimeIndex","timeIndex","getBurgerIsActive","burgerIsActive","getSearchIsActive","searchIsActive","Search","getForecastDataByCityName","setSearchIsActive","useState","isLoader","setIsLoader","className","classNames","s","search_wrapper","active","loader","src","loading","alt","form","onSubmit","e","preventDefault","target","cityName","value","trim","then","input","name","type","placeholder","message","button","searchIcon","instance","axios","baseURL","apiKey","forecastAPI","lat","lon","get","instanceQuotes","quotesAPI","INITIALIZED_SUCCESS","SET_ERROR_MESSAGE","BURGER_IS_ACTIVE","SEARCH_IS_ACTIVE","initialState","setErrorMessage","setBurgerIsActive","isActive","isActiveSearch","appReducer","action","SET_WEEKLY_FORECAST_DATA","SET_CURRENT_DAY","SET_CURRENT_TIME","SET_CURRENT_FORECAST_DATA","SET_TIME_MARKS","SET_CITY","SET_RANDOM_QUOTE","dayIndex","setWeeklyForecastData","week","setCurrentTime","setCurrentForecastData","setCity","processForecastData","forecastData","findDay","day","dayName","Date","dt_txt","toLocaleString","weekday","createForecastArr","arr","map","elem","month","time","hour","minute","temp","main","feels_like","weather","pressure","humidity","wind","speed","createUnicodeDateArr","dt","filter","data","sort","a","b","reverse","length","getForecastDataByGeoCoordinates","dispatch","response","cod","list","setCurrentDayData","err","setCurrentDay","getRandomQuote","Math","floor","random","quote","forecastReducer","Object","assign","connect","status","header_wrap","onClick","burger","active_burger","city_name","city_hidden","search_icon","icon_hidden","DayItem","index","activeClass","setActiveClass","setOnMouseClass","dayItemClasses","onMouseOver","onMouseOut","onMouseClass","useEffect","day_item","on_mouse","not_active_support_one","not_active_support_two","not_active","navbar_wrap","dayItem","Loader","loader_wrap","Quote","quotes_wrap","quoteIcon","text","author","DetailedForecast","id","detailed_forecast_wrap","info_wrap","info_item","icon","pressureIcon","humidityIcon","windIcon","MainForecast","img","description","cloudyDay","thunder","drizzle","rainy","snow","clearDay","main_forecast_wrap","temp_description_wrap","duration","delay","end","celsius","round","icon_wrap","TimeSetter","setCurrentTimeData","timeIndexLocal","setTimeIndexLocal","time_setter_wrap","onChange","min","max","keys","marks","step","animate","elements","document","getElementById","easing","opacity","transform","loop","direction","forecast_wrap","lock","initializeApp","latitude","longitude","forecastDataPromise","randomQuotePromise","Promise","all","navigator","geolocation","getCurrentPosition","coords","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,uBAAyB,iDAAiD,UAAY,oCAAoC,UAAY,oCAAoC,KAAO,iC,mBCAnMD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,UAAY,mCAAmC,OAAS,gCAAgC,YAAc,qCAAqC,YAAc,qCAAqC,YAAc,qCAAqC,cAAgB,yC,mBCAtUD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,yB,mBCArMD,EAAOC,QAAU,CAAC,mBAAqB,yCAAyC,sBAAwB,4CAA4C,KAAO,2BAA2B,QAAU,8BAA8B,YAAc,kCAAkC,UAAY,kC,mBCA1RD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,OAAS,kC,mBCA9ED,EAAOC,QAAU,CAAC,cAAgB,yCAAyC,KAAO,kC,mBCAlFD,EAAOC,QAAU,CAAC,YAAc,+B,mBCAhCD,EAAOC,QAAU,CAAC,YAAc,6B,mBCAhCD,EAAOC,QAAU,CAAC,iBAAmB,uC,uKCDxBC,EAAyB,SAACC,GACrC,OAAOA,EAAMC,SAASC,qBAGXC,EAAqB,SAACH,GACjC,OAAOA,EAAMC,SAASG,aAGXC,EAAiB,SAACL,GAC7B,OAAOA,EAAMM,IAAIC,aAGNC,EAAc,SAACR,GAC1B,OAAOA,EAAMC,SAASQ,MAGXC,EAAU,SAACV,GACtB,OAAOA,EAAMC,SAASC,oBAAoBS,MAG/BC,EAAwB,SAACZ,GACpC,OAAOA,EAAMC,SAASY,oBAGXC,EAAe,SAACd,GAC3B,OAAOA,EAAMC,SAASc,WAGXC,EAAkB,SAAChB,GAC9B,OAAOA,EAAMM,IAAIW,cAGNC,EAAe,SAAClB,GAC3B,OAAOA,EAAMC,SAASkB,WAGXC,EAAoB,SAACpB,GAChC,OAAOA,EAAMM,IAAIe,gBAGNC,EAAoB,SAACtB,GAChC,OAAOA,EAAMM,IAAIiB,gB,yCCzCJ,MAA0B,oC,gBCA1B,MAA0B,wC,OCqD1BC,EA/CA,SAAC,GAKT,IAJLC,EAII,EAJJA,0BACAR,EAGI,EAHJA,aACAM,EAEI,EAFJA,eACAG,EACI,EADJA,kBAEA,EAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KAiBA,OACE,sBACEC,UAAWC,IAAWC,IAAEC,eAAH,eAClBD,IAAEE,OAASX,IAFhB,UAKGK,GAAY,qBAAKE,UAAWE,IAAEG,OAAQC,IAAKC,EAASC,IAAI,KACzD,uBAAMR,UAAWE,IAAEO,KAAMC,SAtBR,SAACC,GACpBA,EAAEC,iBACF,IAAIjC,EAAOgC,EAAEE,OAAOC,SAASC,MAAMC,OAC9BL,EAAEE,OAAOC,SAASC,OACrBnB,GAAkB,GAEhBjB,IACFoB,GAAY,GACZJ,EAA0BhB,GAAMsC,MAAK,WACnClB,GAAY,MAEdY,EAAEE,OAAOC,SAASC,MAAQ,KAW1B,UACE,uBACEf,UAAWE,IAAEgB,MACbC,KAAK,WACLC,KAAK,SACLC,YACGlC,EAAqCA,EAAamC,QAAnC,sBAGpB,wBAAQtB,UAAWE,IAAEqB,OAAQH,KAAK,SAAlC,SACE,qBAAKd,IAAKkB,EAAYhB,IAAI,c,wCC5C9BiB,EAAWC,SAAa,CAC5BC,QAAS,6CAGLC,EAAS,mCAEFC,EAAc,SAaDC,EAAKC,GAC3B,OAAON,EAASO,IAAT,uBAA6BF,EAA7B,gBAAwCC,EAAxC,uCAA0EH,KAdxEC,EAAc,SAiBPlD,GAChB,OAAO8C,EAASO,IAAT,qBAA2BrD,EAA3B,uCAA8DiD,KAInEK,EAAiBP,SAAa,CAClCC,QAAS,gCAGEO,EAAY,WAErB,OAAOD,EAAeD,OC/BpBG,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAmB,mBAErBC,EAAe,CACjB9D,aAAa,EACbU,aAAc,MAkCHqD,EAAkB,SAACrD,GAAD,MAAmB,CAChDiC,KAAMgB,EACNjD,iBAEWsD,EAAoB,SAACC,GAAD,MAAe,CAC9CtB,KAAMiB,EACNK,aAEW9C,EAAoB,SAAC+C,GAAD,MAAqB,CACpDvB,KAAMkB,EACNK,mBAcaC,EAvDI,WAAmC,IAAlC1E,EAAiC,uDAAzBqE,EAAcM,EAAW,uCACnD,OAAQA,EAAOzB,MACb,KAAKe,EACH,OAAO,2BACFjE,GADL,IAEEO,aAAa,EACbc,gBAAgB,EAChBE,gBAAgB,IAGpB,KAAK2C,EACH,OAAO,2BAAKlE,GAAZ,IAAmBiB,aAAc0D,EAAO1D,eAE1C,KAAKkD,EACH,OAAO,2BACFnE,GADL,IAEEqB,eAAgBsD,EAAOH,WAG3B,KAAKJ,EACH,OAAO,2BACFpE,GADL,IAEEuB,eAAgBoD,EAAOF,iBAG3B,QACE,OAAOzE,ICtCP4E,EAA2B,2BAC3BC,EAAkB,kBAClBC,EAAmB,mBACnBC,GAA4B,4BAC5BC,GAAiB,iBACjBC,GAAW,WACXC,GAAmB,mBAErBb,GAAe,CACjBxD,mBAAoB,KACpBX,oBAAqB,KACrBa,UAAW,KACXoE,SAAU,EACVhE,UAAW,EACXV,KAAM,KACNL,YAAa,MAoDFgF,GAAwB,SAACC,GAAD,MAAW,CAC9CnC,KAAM0B,EACNS,SAMWC,GAAiB,eAACnE,EAAD,uDAAa,EAAb,MAAoB,CAChD+B,KAAM4B,EACN3D,cAEWoE,GAAyB,iBAAO,CAC3CrC,KAAM6B,KAGKS,GAAU,SAAC/E,GAAD,MAAW,CAAEyC,KAAM+B,GAAUxE,SAO9CgF,GAAsB,SAACC,GAC3B,IAAMC,EAAU,SAACC,EAAKC,GAIpB,OAHW,IAAIC,KAAKF,EAAIG,QAAQC,eAAe,QAAS,CACtDC,QAAS,WAEKJ,GAGZK,EAAoB,SAACC,GACzB,OAAOA,EAAIC,KAAI,SAACC,GASd,MAAO,CACL1F,KATS,IAAImF,KAAKO,EAAKN,QAAQC,eAAe,QAAS,CACvDM,MAAO,OACPV,IAAK,YAQLW,KANS,IAAIT,KAAKO,EAAKN,QAAQC,eAAe,QAAS,CACvDQ,KAAM,UACNC,OAAQ,YAKRC,KAAML,EAAKM,KAAKD,KAChBE,WAAYP,EAAKM,KAAKC,WACtBC,QAASR,EAAKQ,QAAQ,GACtBC,SAAUT,EAAKM,KAAKG,SACpBC,SAAUV,EAAKM,KAAKI,SACpBC,KAAMX,EAAKW,KAAKC,WAKhBC,EAAuB,SAACf,GAC5B,OAAOA,EAAIC,KAAI,SAACC,GACd,OAAOA,EAAKc,OAIZ9B,EAAO,CACT,CACEO,IAAK,SACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,cAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,eAG9C,CACEA,IAAK,UACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,eAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,gBAG9C,CACEA,IAAK,YACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,iBAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,kBAG9C,CACEA,IAAK,WACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,gBAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,iBAG9C,CACEA,IAAK,SACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,cAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,eAG9C,CACEA,IAAK,WACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,gBAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,iBAG9C,CACEA,IAAK,SACLuB,GAAID,EACFxB,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,cAC1C,GACFyB,KAAMnB,EACJR,EAAa0B,QAAO,SAACxB,GAAD,OAASD,EAAQC,EAAK,gBAkBhD,OAbAP,EACGiC,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEJ,GAAKK,EAAEL,GACJ,EAELI,EAAEJ,GAAKK,EAAEL,IACH,EAEH,KAERM,UAEgBpC,EAAK+B,QAAO,SAACxB,GAAD,QAA+B,IAApBA,EAAIyB,KAAKK,YAIxCC,GACX,SAAC/D,EAAKC,GAAN,8CAAc,WAAO+D,GAAP,eAAAL,EAAA,+EAEa5D,EAAoCC,EAAKC,GAFtD,aAGgB,SADpBgE,EAFI,QAGGR,KAAKS,MAChBF,EAASpC,GAAQqC,EAASR,KAAK5G,KAAKwC,OACpC2E,EACExC,GAAsBK,GAAoBoC,EAASR,KAAKU,QAE1DH,EAASI,GAAkB,KARnB,kBAUHH,GAVG,gCAYVD,EACEtD,EAAgB,CACdlB,QACE,4EACF6E,IAAG,QAhBG,yDAAd,uDAsCWD,GAAoB,SAAC7C,GAAD,OAAc,SAACyC,GAC9CA,EAlL2B,iBAAmB,CAC9C1E,KAAM2B,EACNM,SAF2B,uDAAY,GAkL9B+C,CAAc/C,IACvByC,EAAStC,GAAe,IACxBsC,EAzKiC,CAAE1E,KAAM8B,KA0KzC4C,EAASrC,MACTqC,EAASO,QAQEA,GAAiB,yDAAM,WAAOP,GAAP,iBAAAL,EAAA,sEACXvD,IADW,cAGL,KAFvB6D,EAD4B,QAGrBR,KAAKK,SACVtH,EACJyH,EAASR,KAAKe,KAAKC,MAAMD,KAAKE,SAAWT,EAASR,KAAKK,SACzDE,EAtLsC,CACxC1E,KAAMgC,GACNqD,MAoL0BnI,KANQ,kBAS3ByH,GAT2B,2CAAN,uDAYfW,GA/PS,WAAmC,IAAlCxI,EAAiC,uDAAzBqE,GAAcM,EAAW,uCACxD,OAAQA,EAAOzB,MACb,KAAK0B,EACH,OAAO,2BAAK5E,GAAZ,IAAmBa,mBAAoB8D,EAAOU,OAEhD,KAAKR,EACH,OAAO,2BACF7E,GADL,IAEEmF,SAAUR,EAAOQ,WAGrB,KAAKH,GACH,OAAO,2BACFhF,GADL,IAEEe,UAAW0H,OAAOC,OAChB,GACA1I,EAAMa,mBAAmBuF,KAAI,SAACR,GAAD,OAC3BA,EAAIyB,KAAKjB,KAAI,SAACG,GAAD,OAAUA,EAAKA,WAC5BvG,EAAMmF,aAId,KAAKL,EACH,OAAO,2BACF9E,GADL,IAEEmB,UAAWwD,EAAOxD,YAGtB,KAAK4D,GACH,OAAO,2BACF/E,GADL,IAEEE,oBACEF,EAAMa,mBAAmBb,EAAMmF,UAAUkC,KAAKrH,EAAMmB,aAG1D,KAAK8D,GACH,OAAO,2BACFjF,GADL,IAEES,KAAMkE,EAAOlE,OAGjB,KAAKyE,GACH,OAAO,2BAAKlF,GAAZ,IAAmBI,YAAauE,EAAO4D,QAEzC,QACE,OAAOvI,ICgBE2I,gBATS,SAAC3I,GACvB,MAAO,CACL4C,SAAUpC,EAAYR,GACtBW,KAAMD,EAAQV,GACdqB,eAAgBD,EAAkBpB,GAClCuB,eAAgBD,EAAkBtB,MAIE,CACtCyB,0BDwJuC,SAAChB,GAAD,8CAAU,WAAOmH,GAAP,eAAAL,EAAA,+EAExB5D,EAA8BlD,GAFN,cAGvB,OADlBoH,EAFyC,QAGlCe,SACXhB,EAASpC,GAAQqC,EAASR,KAAK5G,KAAKwC,OACpC2E,EAASxC,GAAsBK,GAAoBoC,EAASR,KAAKU,QACjEH,EAASI,GAAkB,IAC3BJ,EAAStD,EAAgB,OACzBsD,EAASlG,GAAkB,KARkB,kBAUxCmG,GAVwC,gCAY/CD,EAAStD,EAAgB,CAAElB,QAAS,qBAAsB6E,IAAG,QAZd,yDAAV,uDCvJvC1D,oBACA7C,qBAHaiH,EAnES,SAAC,GASlB,IARL/F,EAQI,EARJA,SACAjC,EAOI,EAPJA,KACAc,EAMI,EANJA,0BACAR,EAKI,EALJA,aACAI,EAII,EAJJA,eACAkD,EAGI,EAHJA,kBACAhD,EAEI,EAFJA,eACAG,EACI,EADJA,kBAWA,OACE,sBAAKI,UAAWE,IAAE6G,YAAlB,UACE,qBACEC,QAZa,WACZzH,GACHkD,GAAkB,GAEhBlD,GACFkD,GAAkB,IAQhBzC,UAAWC,IAAWC,IAAE+G,OAAH,eAClB/G,IAAEgH,cAAgB3H,IAHvB,SAME,2BAGF,sBACES,UAAWC,IAAWC,IAAEiH,UAAH,eAClBjH,IAAEkH,YAAc3H,IAFrB,UAKE,+BAAOqB,IACP,+BAAOjC,OAGT,qBACEmI,QAAS,kBAAMpH,GAAkB,IACjCI,UAAWC,IAAWC,IAAEmH,YAAH,eAClBnH,IAAEoH,YAAc7H,IAHrB,SAME,qBAAKa,IAAKkB,EAAYhB,IAAI,OAG5B,cAAC,EAAD,CACEb,0BAA2BA,EAC3BR,aAAcA,EACdM,eAAgBA,EAChBG,kBAAmBA,U,oBClCZ2H,I,MA9BC,SAAC,GAUV,IATLzD,EASI,EATJA,IACAjF,EAQI,EARJA,KACA2I,EAOI,EAPJA,MACAtB,EAMI,EANJA,kBACAzD,EAKI,EALJA,kBACAgF,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,eAEA,OACE,qBACEZ,QAAS,WACPd,EAAkBsB,GAClBE,EAAeF,GACf/E,GAAkB,IAEpBoF,YAAa,kBAAMF,EAAgBH,IACnCM,WAAY,kBAAMH,EAAgB,OAClC3H,UAAW4H,EAAeJ,EAAOC,GARnC,SAUE,sBAAKzH,UAAW,MAAhB,UACE,8BAAM8D,IACN,8BAAMjF,WC+CCgI,gBAPS,SAAC3I,GACvB,MAAO,CACLqF,KAAMzE,EAAsBZ,GAC5BqB,eAAgBD,EAAkBpB,MAIE,CACtCgI,qBACAzD,qBAFaoE,EA7DS,SAAC,GAMlB,IALLtD,EAKI,EALJA,KACA2C,EAII,EAJJA,kBACAG,EAGI,EAHJA,eACA9G,EAEI,EAFJA,eACAkD,EACI,EADJA,kBAEA,EAAoC5C,mBAAS,GAA7C,mBAAK4H,EAAL,KAAkBC,EAAlB,KACA,EAAsC7H,mBAAS,MAA/C,mBAAKkI,EAAL,KAAmBJ,EAAnB,KAEAK,qBAAU,WACRN,EAAe,KACd,CAACnE,IAEJ,IAAIqE,EAAiB,SAACJ,EAAOC,GAC3B,OAAOxH,IAAW,CAChBgI,UAAU,EACVC,SAAUV,IAAUO,EACpB3H,OAAQoH,IAAUC,EAClBU,yBACIX,IAAUC,IAAgBD,IAAUC,EAAc,EACtDW,yBACIZ,IAAUC,IAAgBD,IAAUC,EAAc,EACtDY,aAAcb,IAAUC,MAG5B,OACE,qBACEzH,UAAWC,IAAWC,KAAEoI,YAAH,eAClBpI,KAAEE,OAASb,IAFhB,SAKGgE,EAAKe,KAAI,SAACiE,EAASf,GAClB,OAAMe,EAAQhD,KAAKK,QAAU,EAE3B,cAAC,GAAD,CACEM,kBAAmBA,EACnBuB,YAAaA,EACbC,eAAgBA,EAChBC,gBAAiBA,EACjBC,eAAgBA,EAChBvB,eAAgBA,EAChB5D,kBAAmBA,EAEnB+E,MAAOA,EACP1D,IAAKyE,EAAQzE,IACbjF,KAAM0J,EAAQhD,KAAK,GAAG1G,MAHjB0J,EAAQlD,IAVuB,a,oBClCjCmD,GARA,WACb,OACE,qBAAKxI,UAAWE,KAAEuI,YAAlB,SACE,qBAAKnI,IAAKD,EAAQG,IAAI,c,wCCPb,OAA0B,iCCA1B,OAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,uC,oBCe1BkI,GAVD,SAAC,GAAqB,IAAnBpK,EAAkB,EAAlBA,YACf,OACE,sBAAK0B,UAAWE,KAAEyI,YAAlB,UACE,qBAAKrI,IAAKsI,GAAWpI,IAAI,KACzB,8BAAMlC,EAAYuK,OAClB,8BAAMvK,EAAYwK,aC2BTC,GA7BU,SAAC,GAA+C,IAA7C/D,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAM5G,EAAkB,EAAlBA,YACpD,OACE,sBAAK0K,GAAG,oBAAoBhJ,UAAWE,KAAE+I,uBAAzC,UACE,sBAAKjJ,UAAWE,KAAEgJ,UAAlB,UACE,sBAAKlJ,UAAWE,KAAEiJ,UAAlB,UACE,qBAAKnJ,UAAWE,KAAEkJ,KAAlB,SACE,qBAAK9I,IAAK+I,GAAc7I,IAAI,OAE7BwE,EAJH,mBAMA,sBAAKhF,UAAWE,KAAEiJ,UAAlB,UACE,qBAAKnJ,UAAWE,KAAEkJ,KAAlB,SACE,qBAAK9I,IAAKgJ,GAAc9I,IAAI,OAE7ByE,EAJH,iBAMA,sBAAKjF,UAAWE,KAAEiJ,UAAlB,UACE,qBAAKnJ,UAAWE,KAAEkJ,KAAlB,SACE,qBAAK9I,IAAKiJ,GAAU/I,IAAI,OAEzB0E,EAJH,kBAQF,cAAC,GAAD,CAAO5G,YAAaA,Q,wCChCX,OAA0B,mCCA1B,OAA0B,yCCA1B,OAA0B,oCCA1B,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,gCCgE1BkL,GArDM,SAAC,GAA0D,IAC1EC,EADyE,IAAvD1E,QAAW2E,EAA4C,EAA5CA,YAAa7E,EAA+B,EAA/BA,KAAQD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,WAG5D,OAAQD,GACN,IAAK,SACH4E,EAAME,GACN,MAEF,IAAK,eACHF,EAAMG,GACN,MAEF,IAAK,UACHH,EAAMI,GACN,MAEF,IAAK,OACHJ,EAAMK,GACN,MAEF,IAAK,OACHL,EAAMM,GACN,MAEF,IAAK,QAIL,QACEN,EAAMO,GAIV,OACE,sBAAKhK,UAAWE,KAAE+J,mBAAlB,UACE,sBAAKjK,UAAWE,KAAEgK,sBAAlB,UACE,sBAAKlK,UAAWE,KAAE0E,KAAlB,UACE,cAAC,KAAD,CAASuF,SAAU,GAAKC,MAAO,EAAGC,IAAKzF,IACvC,sBAAM5E,UAAWE,KAAEoK,QAAnB,sBAEF,sBAAKtB,GAAG,cAAchJ,UAAWE,KAAEwJ,YAAnC,UACE,8CAAiBpD,KAAKiE,MAAMzF,GAA5B,YACA,8BAAM4E,UAIV,qBAAK1J,UAAWE,KAAEsK,UAAlB,SACE,qBAAKxB,GAAG,eAAe1I,IAAKmJ,EAAKjJ,IAAI,W,6BC9B9BiK,I,MAtBI,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,mBAAoBzL,EAA2B,EAA3BA,UAAWI,EAAgB,EAAhBA,UACnD,EAA0CQ,mBAASR,GAAnD,mBAAKsL,EAAL,KAAqBC,EAArB,KAOA,OACE,qBAAK5K,UAAWE,KAAE2K,iBAAlB,SACE,cAAC,KAAD,CACEC,SARe,SAAC/J,GACpB6J,EAAkB7J,GAClB2J,EAAmB3J,IAOfgK,IAAK,EACLC,IAAKrE,OAAOsE,KAAKhM,GAAW2G,OAAS,EACrCsF,MAAOjM,EACPkM,KAAM,KACNpK,MAAO4J,Q,SCuCA9D,gBAVS,SAAC3I,GACvB,MAAO,CACLE,oBAAqBH,EAAuBC,GAC5CI,YAAaD,EAAmBH,GAChCe,UAAWD,EAAad,GACxBmB,UAAWD,EAAalB,GACxBqB,eAAgBD,EAAkBpB,MAIE,CAAEwM,mBnBsMR,SAACrL,GAAD,OAAe,SAACyG,GAChDA,EAAStC,GAAenE,IACxByG,EAASrC,SmBxMIoD,EA5CW,SAAC,GAOpB,IAAD,IANJzI,oBAAuB2G,EAMnB,EANmBA,QAASH,EAM5B,EAN4BA,KAAME,EAMlC,EANkCA,WAAYE,EAM9C,EAN8CA,SAAUC,EAMxD,EANwDA,SAAUC,EAMlE,EANkEA,KACtE5G,EAKI,EALJA,YACAe,EAII,EAJJA,UACAJ,EAGI,EAHJA,UACAyL,EAEI,EAFJA,mBACAnL,EACI,EADJA,eAMA,OAJAyI,qBAAU,WCtBVoD,aAAQ,CACNC,SAAU,CACRC,SAASC,eAAe,qBACxBD,SAASC,eAAe,eACxBD,SAASC,eAAe,iBAE1BC,OAAQ,cACRrB,SAAU,IACVsB,QAAS,CAAC,EAAG,GACbC,UAAW,CAAC,mBAAoB,KAC/BzK,MAAK,kBACNmK,aAAQ,CACNC,SAAUC,SAASC,eAAe,gBAClCC,OAAQ,SACRrB,SAAU,IACVwB,MAAM,EACND,UAAW,CAAC,kBAAmB,IAC/BE,UAAW,mBDOb,CAAC7G,IAGD,sBACE/E,UAAWC,IAAWC,KAAE2L,cAAH,eAClB3L,KAAE4L,KAAOvM,IAFd,UAKE,cAAC,GAAD,CAAcwF,QAASA,EAASH,KAAMA,EAAME,WAAYA,IACxD,cAAC,GAAD,CACEE,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACN5G,YAAaA,IAEf,cAAC,GAAD,CACEe,UAAWA,EACXJ,UAAWA,EACXyL,mBAAoBA,UENb7D,gBAPS,SAAC3I,GACvB,MAAO,CACLO,YAAaF,EAAeL,GAC5BiB,aAAcD,EAAgBhB,MAIM,CACtC6N,ctBmB2B,SAACC,EAAUC,GAAX,OAAyB,SAACnG,GACrD,IAAIoG,EAAsBpG,EACxBD,GAAgCmG,EAAUC,IAExCE,EAAqBrG,EAASO,MAElC+F,QAAQC,IAAI,CAACH,EAAqBC,IAAqBlL,MAAK,WAC1D6E,EArBwC,CAAE1E,KAAMe,UsBNrC0E,EA7BH,SAAC,GAAkD,IAAhDpI,EAA+C,EAA/CA,YAAasN,EAAkC,EAAlCA,cAAe5M,EAAmB,EAAnBA,aAOzC,OANA6I,qBAAU,WACRsE,UAAUC,YAAYC,oBAAmB,SAACjH,GACxCwG,EAAcxG,EAAKkH,OAAOT,SAAUzG,EAAKkH,OAAOR,gBAEjD,CAACF,IAGF,mCACItN,EAGA,sBAAKuB,UAAU,cAAf,UACE,cAAC,GAAD,CAAiBb,aAAcA,IAC/B,cAAC,GAAD,IACA,cAAC,GAAD,OALF,cAAC,GAAD,S,kBCfJuN,GAAcC,aAAgB,CAChCxO,SAAUuI,GACVlI,IAAKoE,IAGDgK,GAAmBC,OAAOC,sCAAwCC,KAMzDC,GALDC,aACZP,GACAE,GAAiBM,aAAgBC,QCNnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ1B,SAASC,eAAe,W","file":"static/js/main.f7b30dad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailed_forecast_wrap\":\"DetailedForecast_detailed_forecast_wrap__35yO6\",\"info_wrap\":\"DetailedForecast_info_wrap__2o_cn\",\"info_item\":\"DetailedForecast_info_item__3VwZc\",\"icon\":\"DetailedForecast_icon__1uhny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrap\":\"HeaderContainer_header_wrap__3yQmz\",\"city_name\":\"HeaderContainer_city_name__2OIKC\",\"burger\":\"HeaderContainer_burger__1Chbw\",\"search_icon\":\"HeaderContainer_search_icon__1Zmfd\",\"icon_hidden\":\"HeaderContainer_icon_hidden__RCXeB\",\"city_hidden\":\"HeaderContainer_city_hidden__2zctz\",\"active_burger\":\"HeaderContainer_active_burger__1SptK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_wrapper\":\"Search_search_wrapper__1bCqX\",\"loader\":\"Search_loader__2oXsK\",\"form\":\"Search_form__1GpiT\",\"input\":\"Search_input__1_YKK\",\"button\":\"Search_button__21B3C\",\"active\":\"Search_active__3RL27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_forecast_wrap\":\"MainForecast_main_forecast_wrap__1b8Je\",\"temp_description_wrap\":\"MainForecast_temp_description_wrap__1QBO1\",\"temp\":\"MainForecast_temp__2iB8y\",\"celsius\":\"MainForecast_celsius__1X9ZB\",\"description\":\"MainForecast_description__1T6Gy\",\"icon_wrap\":\"MainForecast_icon_wrap__2ttTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar_wrap\":\"NavBarContainer_navbar_wrap__1aZ3m\",\"active\":\"NavBarContainer_active__7ma1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast_wrap\":\"ForecastContainer_forecast_wrap__1ScYZ\",\"lock\":\"ForecastContainer_lock__vG81o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader_wrap\":\"Loading_loader_wrap__3bm1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotes_wrap\":\"Quote_quotes_wrap__3gy0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time_setter_wrap\":\"TimeSetter_time_setter_wrap__tX93v\"};","export const getCurrentForecastData = (state) => {\r\n  return state.forecast.currentForecastData;\r\n};\r\n\r\nexport const getRandomQuoteData = (state) => {\r\n  return state.forecast.randomQuote;\r\n};\r\n\r\nexport const getInitialized = (state) => {\r\n  return state.app.initialized;\r\n};\r\n\r\nexport const getCityName = (state) => {\r\n  return state.forecast.city;\r\n};\r\n\r\nexport const getDate = (state) => {\r\n  return state.forecast.currentForecastData.date;\r\n};\r\n\r\nexport const getWeeklyForecastData = (state) => {\r\n  return state.forecast.weeklyForecastData;\r\n};\r\n\r\nexport const getTimeMarks = (state) => {\r\n  return state.forecast.timeMarks;\r\n};\r\n\r\nexport const getErrorMessage = (state) => {\r\n  return state.app.errorMessage;\r\n};\r\n\r\nexport const getTimeIndex = (state) => {\r\n  return state.forecast.timeIndex;\r\n};\r\n\r\nexport const getBurgerIsActive = (state) => {\r\n  return state.app.burgerIsActive;\r\n};\r\n\r\nexport const getSearchIsActive = (state) => {\r\n  return state.app.searchIsActive;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/loading.6c041e81.svg\";","export default __webpack_public_path__ + \"static/media/search-icon.5a0cb893.svg\";","import React, { useState } from \"react\";\r\nimport s from \"./Search.module.css\";\r\nimport loading from \"../../../assets/loading.svg\";\r\nimport classNames from \"classnames\";\r\nimport searchIcon from \"../../../assets/search-icon.svg\";\r\n\r\nconst Search = ({\r\n  getForecastDataByCityName,\r\n  errorMessage,\r\n  searchIsActive,\r\n  setSearchIsActive,\r\n}) => {\r\n  let [isLoader, setIsLoader] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let city = e.target.cityName.value.trim();\r\n    if (!e.target.cityName.value) {\r\n      setSearchIsActive(false);\r\n    }\r\n    if (city) {\r\n      setIsLoader(true);\r\n      getForecastDataByCityName(city).then(() => {\r\n        setIsLoader(false);\r\n      });\r\n      e.target.cityName.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(s.search_wrapper, {\r\n        [s.active]: searchIsActive,\r\n      })}\r\n    >\r\n      {isLoader && <img className={s.loader} src={loading} alt=\"\" />}\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <input\r\n          className={s.input}\r\n          name=\"cityName\"\r\n          type=\"search\"\r\n          placeholder={\r\n            !errorMessage ? \"Enter location...\" : errorMessage.message\r\n          }\r\n        />\r\n        <button className={s.button} type=\"submit\">\r\n          <img src={searchIcon} alt=\"\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n});\r\n\r\nconst apiKey = \"6988b33ac0cac63cee28223a1e642aee\";\r\n\r\nexport const forecastAPI = {\r\n  byGeoCoordinates(lat, lon) {\r\n    return instance.get(\r\n      `weather?lat=${lat}&lon=${lon}&units=metric&lang=en&appid=${apiKey}`\r\n    );\r\n  },\r\n\r\n  byCityName(city) {\r\n    return instance.get(\r\n      `weather?q=${city}&units=metric&lang=en&appid=${apiKey}`\r\n    );\r\n  },\r\n\r\n  forWeekByGeoCoordinates(lat, lon) {\r\n    return instance.get(`forecast?lat=${lat}&lon=${lon}&lang=en&units=metric&appid=${apiKey}`);\r\n  },\r\n\r\n  forWeekByCityName(city) {\r\n    return instance.get(`forecast?q=${city}&lang=en&units=metric&appid=${apiKey}`);\r\n  },\r\n};\r\n\r\nconst instanceQuotes = axios.create({\r\n  baseURL: \"https://type.fit/api/quotes\",\r\n});\r\n\r\nexport const quotesAPI = {\r\n  getQuotes() {\r\n    return instanceQuotes.get();\r\n  },\r\n};\r\n","import {\r\n  getForecastDataByGeoCoordinates,\r\n  getRandomQuote,\r\n} from \"./forecastReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\nconst SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\r\nconst BURGER_IS_ACTIVE = \"BURGER_IS_ACTIVE\";\r\nconst SEARCH_IS_ACTIVE = \"SEARCH_IS_ACTIVE\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n  errorMessage: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n        burgerIsActive: false,\r\n        searchIsActive: false,\r\n      };\r\n\r\n    case SET_ERROR_MESSAGE:\r\n      return { ...state, errorMessage: action.errorMessage };\r\n\r\n    case BURGER_IS_ACTIVE:\r\n      return {\r\n        ...state,\r\n        burgerIsActive: action.isActive,\r\n      };\r\n\r\n    case SEARCH_IS_ACTIVE:\r\n      return {\r\n        ...state,\r\n        searchIsActive: action.isActiveSearch,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccessful = () => ({ type: INITIALIZED_SUCCESS });\r\nexport const setErrorMessage = (errorMessage) => ({\r\n  type: SET_ERROR_MESSAGE,\r\n  errorMessage,\r\n});\r\nexport const setBurgerIsActive = (isActive) => ({\r\n  type: BURGER_IS_ACTIVE,\r\n  isActive,\r\n});\r\nexport const setSearchIsActive = (isActiveSearch) => ({\r\n  type: SEARCH_IS_ACTIVE,\r\n  isActiveSearch,\r\n});\r\n\r\nexport const initializeApp = (latitude, longitude) => (dispatch) => {\r\n  let forecastDataPromise = dispatch(\r\n    getForecastDataByGeoCoordinates(latitude, longitude)\r\n  );\r\n  let randomQuotePromise = dispatch(getRandomQuote());\r\n\r\n  Promise.all([forecastDataPromise, randomQuotePromise]).then(() => {\r\n    dispatch(initializedSuccessful());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { forecastAPI, quotesAPI } from \"../api/api\";\r\nimport { setErrorMessage, setSearchIsActive } from \"./appReducer\";\r\n\r\nconst SET_WEEKLY_FORECAST_DATA = \"SET_WEEKLY_FORECAST_DATA\";\r\nconst SET_CURRENT_DAY = \"SET_CURRENT_DAY\";\r\nconst SET_CURRENT_TIME = \"SET_CURRENT_TIME\";\r\nconst SET_CURRENT_FORECAST_DATA = \"SET_CURRENT_FORECAST_DATA\";\r\nconst SET_TIME_MARKS = \"SET_TIME_MARKS\";\r\nconst SET_CITY = \"SET_CITY\";\r\nconst SET_RANDOM_QUOTE = \"SET_RANDOM_QUOTE\";\r\n\r\nlet initialState = {\r\n  weeklyForecastData: null,\r\n  currentForecastData: null,\r\n  timeMarks: null,\r\n  dayIndex: 0,\r\n  timeIndex: 0,\r\n  city: null,\r\n  randomQuote: null,\r\n};\r\n\r\nconst forecastReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_WEEKLY_FORECAST_DATA:\r\n      return { ...state, weeklyForecastData: action.week };\r\n\r\n    case SET_CURRENT_DAY:\r\n      return {\r\n        ...state,\r\n        dayIndex: action.dayIndex,\r\n      };\r\n\r\n    case SET_TIME_MARKS:\r\n      return {\r\n        ...state,\r\n        timeMarks: Object.assign(\r\n          {},\r\n          state.weeklyForecastData.map((day) =>\r\n            day.data.map((time) => time.time)\r\n          )[state.dayIndex]\r\n        ),\r\n      };\r\n\r\n    case SET_CURRENT_TIME:\r\n      return {\r\n        ...state,\r\n        timeIndex: action.timeIndex,\r\n      };\r\n\r\n    case SET_CURRENT_FORECAST_DATA:\r\n      return {\r\n        ...state,\r\n        currentForecastData:\r\n          state.weeklyForecastData[state.dayIndex].data[state.timeIndex],\r\n      };\r\n\r\n    case SET_CITY:\r\n      return {\r\n        ...state,\r\n        city: action.city,\r\n      };\r\n\r\n    case SET_RANDOM_QUOTE:\r\n      return { ...state, randomQuote: action.quote };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setWeeklyForecastData = (week) => ({\r\n  type: SET_WEEKLY_FORECAST_DATA,\r\n  week,\r\n});\r\nexport const setCurrentDay = (dayIndex = 0) => ({\r\n  type: SET_CURRENT_DAY,\r\n  dayIndex,\r\n});\r\nexport const setCurrentTime = (timeIndex = 0) => ({\r\n  type: SET_CURRENT_TIME,\r\n  timeIndex,\r\n});\r\nexport const setCurrentForecastData = () => ({\r\n  type: SET_CURRENT_FORECAST_DATA,\r\n});\r\nexport const setTimeMarks = () => ({ type: SET_TIME_MARKS });\r\nexport const setCity = (city) => ({ type: SET_CITY, city });\r\n\r\nexport const setRandomQuote = (quote) => ({\r\n  type: SET_RANDOM_QUOTE,\r\n  quote,\r\n});\r\n\r\nconst processForecastData = (forecastData) => {\r\n  const findDay = (day, dayName) => {\r\n    let date = new Date(day.dt_txt).toLocaleString(\"en-GB\", {\r\n      weekday: \"long\",\r\n    });\r\n    return date === dayName;\r\n  };\r\n\r\n  const createForecastArr = (arr) => {\r\n    return arr.map((elem) => {\r\n      let date = new Date(elem.dt_txt).toLocaleString(\"en-GB\", {\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      });\r\n      let time = new Date(elem.dt_txt).toLocaleString(\"en-GB\", {\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n      });\r\n      return {\r\n        date,\r\n        time,\r\n        temp: elem.main.temp,\r\n        feels_like: elem.main.feels_like,\r\n        weather: elem.weather[0],\r\n        pressure: elem.main.pressure,\r\n        humidity: elem.main.humidity,\r\n        wind: elem.wind.speed,\r\n      };\r\n    });\r\n  };\r\n\r\n  const createUnicodeDateArr = (arr) => {\r\n    return arr.map((elem) => {\r\n      return elem.dt;\r\n    });\r\n  };\r\n\r\n  let week = [\r\n    {\r\n      day: \"Monday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Monday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Monday\"))\r\n      ),\r\n    },\r\n    {\r\n      day: \"Tuesday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Tuesday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Tuesday\"))\r\n      ),\r\n    },\r\n    {\r\n      day: \"Wednesday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Wednesday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Wednesday\"))\r\n      ),\r\n    },\r\n    {\r\n      day: \"Thursday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Thursday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Thursday\"))\r\n      ),\r\n    },\r\n    {\r\n      day: \"Friday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Friday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Friday\"))\r\n      ),\r\n    },\r\n    {\r\n      day: \"Saturday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Saturday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Saturday\"))\r\n      ),\r\n    },\r\n    {\r\n      day: \"Sunday\",\r\n      dt: createUnicodeDateArr(\r\n        forecastData.filter((day) => findDay(day, \"Sunday\"))\r\n      )[0],\r\n      data: createForecastArr(\r\n        forecastData.filter((day) => findDay(day, \"Sunday\"))\r\n      ),\r\n    },\r\n  ];\r\n\r\n  week\r\n    .sort((a, b) => {\r\n      if (a.dt < b.dt) {\r\n        return 1;\r\n      }\r\n      if (a.dt > b.dt) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    })\r\n    .reverse();\r\n\r\n  let filteredWeek = week.filter((day) => !(day.data.length === 0));\r\n  return filteredWeek;\r\n};\r\n\r\nexport const getForecastDataByGeoCoordinates =\r\n  (lat, lon) => async (dispatch) => {\r\n    try {\r\n      const response = await forecastAPI.forWeekByGeoCoordinates(lat, lon);\r\n      if (response.data.cod === \"200\") {\r\n        dispatch(setCity(response.data.city.name));\r\n        dispatch(\r\n          setWeeklyForecastData(processForecastData(response.data.list))\r\n        );\r\n        dispatch(setCurrentDayData(0));\r\n      }\r\n      return response;\r\n    } catch (err) {\r\n      dispatch(\r\n        setErrorMessage({\r\n          message:\r\n            \"Something went wrong. Perhaps you did not allow access to the geolocation\",\r\n          err,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\nexport const getForecastDataByCityName = (city) => async (dispatch) => {\r\n  try {\r\n    const response = await forecastAPI.forWeekByCityName(city);\r\n    if (response.status === 200) {\r\n      dispatch(setCity(response.data.city.name));\r\n      dispatch(setWeeklyForecastData(processForecastData(response.data.list)));\r\n      dispatch(setCurrentDayData(0));\r\n      dispatch(setErrorMessage(null));\r\n      dispatch(setSearchIsActive(false));\r\n    }\r\n    return response;\r\n  } catch (err) {\r\n    dispatch(setErrorMessage({ message: \"Location not found\", err }));\r\n  }\r\n};\r\n\r\nexport const setCurrentDayData = (dayIndex) => (dispatch) => {\r\n  dispatch(setCurrentDay(dayIndex));\r\n  dispatch(setCurrentTime(0));\r\n  dispatch(setTimeMarks());\r\n  dispatch(setCurrentForecastData());\r\n  dispatch(getRandomQuote());\r\n};\r\n\r\nexport const setCurrentTimeData = (timeIndex) => (dispatch) => {\r\n  dispatch(setCurrentTime(timeIndex));\r\n  dispatch(setCurrentForecastData());\r\n};\r\n\r\nexport const getRandomQuote = () => async (dispatch) => {\r\n  const response = await quotesAPI.getQuotes();\r\n\r\n  if (response.data.length !== 0) {\r\n    const randomQuote =\r\n      response.data[Math.floor(Math.random() * response.data.length)];\r\n    dispatch(setRandomQuote(randomQuote));\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport default forecastReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCityName,\r\n  getDate,\r\n  getBurgerIsActive,\r\n  getSearchIsActive,\r\n} from \"../../utils/selectors\";\r\nimport s from \"./HeaderContainer.module.css\";\r\nimport Search from \"./Search/Search\";\r\nimport { getForecastDataByCityName } from \"../../redux/forecastReducer\";\r\nimport { setBurgerIsActive, setSearchIsActive } from \"../../redux/appReducer\";\r\nimport classNames from \"classnames\";\r\nimport searchIcon from \"../../assets/search-icon.svg\";\r\n\r\nconst HeaderContainer = ({\r\n  cityName,\r\n  date,\r\n  getForecastDataByCityName,\r\n  errorMessage,\r\n  burgerIsActive,\r\n  setBurgerIsActive,\r\n  searchIsActive,\r\n  setSearchIsActive,\r\n}) => {\r\n  let toggleBurger = () => {\r\n    if (!burgerIsActive) {\r\n      setBurgerIsActive(true);\r\n    }\r\n    if (burgerIsActive) {\r\n      setBurgerIsActive(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.header_wrap}>\r\n      <div\r\n        onClick={toggleBurger}\r\n        className={classNames(s.burger, {\r\n          [s.active_burger]: burgerIsActive,\r\n        })}\r\n      >\r\n        <span></span>\r\n      </div>\r\n\r\n      <div\r\n        className={classNames(s.city_name, {\r\n          [s.city_hidden]: searchIsActive,\r\n        })}\r\n      >\r\n        <span>{cityName}</span>\r\n        <span>{date}</span>\r\n      </div>\r\n\r\n      <div\r\n        onClick={() => setSearchIsActive(true)}\r\n        className={classNames(s.search_icon, {\r\n          [s.icon_hidden]: searchIsActive,\r\n        })}\r\n      >\r\n        <img src={searchIcon} alt=\"\" />\r\n      </div>\r\n\r\n      <Search\r\n        getForecastDataByCityName={getForecastDataByCityName}\r\n        errorMessage={errorMessage}\r\n        searchIsActive={searchIsActive}\r\n        setSearchIsActive={setSearchIsActive}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cityName: getCityName(state),\r\n    date: getDate(state),\r\n    burgerIsActive: getBurgerIsActive(state),\r\n    searchIsActive: getSearchIsActive(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getForecastDataByCityName,\r\n  setBurgerIsActive,\r\n  setSearchIsActive,\r\n})(HeaderContainer);\r\n","import React from \"react\";\r\nimport \"./DayItem.css\";\r\n\r\nconst DayItem = ({\r\n  day,\r\n  date,\r\n  index,\r\n  setCurrentDayData,\r\n  setBurgerIsActive,\r\n  activeClass,\r\n  setActiveClass,\r\n  setOnMouseClass,\r\n  dayItemClasses,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setCurrentDayData(index);\r\n        setActiveClass(index);\r\n        setBurgerIsActive(false);\r\n      }}\r\n      onMouseOver={() => setOnMouseClass(index)}\r\n      onMouseOut={() => setOnMouseClass(null)}\r\n      className={dayItemClasses(index, activeClass)}\r\n    >\r\n      <div className={\"day\"}>\r\n        <div>{day}</div>\r\n        <div>{date}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayItem;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./NavBarContainer.module.css\";\r\nimport {\r\n  getBurgerIsActive,\r\n  getWeeklyForecastData,\r\n} from \"../../utils/selectors.js\";\r\nimport DayItem from \"./DayItem/DayItem\";\r\nimport { setCurrentDayData } from \"../../redux/forecastReducer\";\r\nimport { setBurgerIsActive } from \"../../redux/appReducer\";\r\nimport classNames from \"classnames\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NavBarContainer = ({\r\n  week,\r\n  setCurrentDayData,\r\n  getRandomQuote,\r\n  burgerIsActive,\r\n  setBurgerIsActive,\r\n}) => {\r\n  let [activeClass, setActiveClass] = useState(0);\r\n  let [onMouseClass, setOnMouseClass] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setActiveClass(0);\r\n  }, [week]);\r\n\r\n  let dayItemClasses = (index, activeClass) => {\r\n    return classNames({\r\n      day_item: true,\r\n      on_mouse: index === onMouseClass,\r\n      active: index === activeClass,\r\n      not_active_support_one:\r\n        !(index === activeClass) && index === activeClass - 1,\r\n      not_active_support_two:\r\n        !(index === activeClass) && index === activeClass + 1,\r\n      not_active: !(index === activeClass),\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className={classNames(s.navbar_wrap, {\r\n        [s.active]: burgerIsActive,\r\n      })}\r\n    >\r\n      {week.map((dayItem, index) => {\r\n        if (!(dayItem.data.length >= 1)) return null;\r\n        return (\r\n          <DayItem\r\n            setCurrentDayData={setCurrentDayData}\r\n            activeClass={activeClass}\r\n            setActiveClass={setActiveClass}\r\n            setOnMouseClass={setOnMouseClass}\r\n            dayItemClasses={dayItemClasses}\r\n            getRandomQuote={getRandomQuote}\r\n            setBurgerIsActive={setBurgerIsActive}\r\n            key={dayItem.dt}\r\n            index={index}\r\n            day={dayItem.day}\r\n            date={dayItem.data[0].date}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    week: getWeeklyForecastData(state),\r\n    burgerIsActive: getBurgerIsActive(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setCurrentDayData,\r\n  setBurgerIsActive,\r\n})(NavBarContainer);\r\n","import React from \"react\";\r\nimport loader from \"../../assets/loading.svg\";\r\nimport s from \"./Loading.module.css\"\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={s.loader_wrap} >\r\n      <img src={loader} alt=\"loader\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/wind.8a6a5574.svg\";","export default __webpack_public_path__ + \"static/media/pressure.afa9d553.svg\";","export default __webpack_public_path__ + \"static/media/humidity.0d87fd1e.svg\";","export default __webpack_public_path__ + \"static/media/left-quote.acafc391.svg\";","import React from \"react\";\r\nimport quoteIcon from \"../../../../assets/detailed-forecast/left-quote.svg\";\r\n\r\nimport s from \"./Quote.module.css\";\r\n\r\nconst Quote = ({ randomQuote }) => {\r\n  return (\r\n    <div className={s.quotes_wrap}>\r\n      <img src={quoteIcon} alt=\"\" />\r\n      <div>{randomQuote.text}</div>\r\n      <div>{randomQuote.author}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\nimport s from \"./DetailedForecast.module.css\";\r\n//icons\r\nimport windIcon from \"../../../assets/detailed-forecast/wind.svg\";\r\nimport pressureIcon from \"../../../assets/detailed-forecast/pressure.svg\";\r\nimport humidityIcon from \"../../../assets/detailed-forecast/humidity.svg\"\r\nimport Quote from \"./Quote/Quote\";\r\n\r\nconst DetailedForecast = ({ pressure, humidity, wind, randomQuote }) => {\r\n  return (\r\n    <div id=\"detailed_forecast\" className={s.detailed_forecast_wrap}>\r\n      <div className={s.info_wrap}>\r\n        <div className={s.info_item}>\r\n          <div className={s.icon}>\r\n            <img src={pressureIcon} alt=\"\" />\r\n          </div>\r\n          {pressure} hPa Pressure\r\n        </div>\r\n        <div className={s.info_item}>\r\n          <div className={s.icon}>\r\n            <img src={humidityIcon} alt=\"\" />\r\n          </div>\r\n          {humidity} % Humidity\r\n        </div>\r\n        <div className={s.info_item}>\r\n          <div className={s.icon}>\r\n            <img src={windIcon} alt=\"\" />\r\n          </div>\r\n          {wind} m/s Wind\r\n        </div>\r\n      </div>\r\n\r\n      <Quote randomQuote={randomQuote} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedForecast;\r\n","export default __webpack_public_path__ + \"static/media/cloudy.0834d4ae.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorm.79ea09ae.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.767428d2.svg\";","export default __webpack_public_path__ + \"static/media/rainy.e4d918ad.svg\";","export default __webpack_public_path__ + \"static/media/snowy.b349810c.svg\";","export default __webpack_public_path__ + \"static/media/sun.7d1e1b01.svg\";","import React from \"react\";\r\nimport s from \"./MainForecast.module.css\";\r\nimport CountUp from \"react-countup\";\r\n//icons\r\nimport cloudyDay from \"../../../assets/weather-icons/cloudy.svg\";\r\nimport thunder from \"../../../assets/weather-icons/thunderstorm.svg\";\r\nimport drizzle from \"../../../assets/weather-icons/drizzle.svg\";\r\nimport rainy from \"../../../assets/weather-icons/rainy.svg\";\r\nimport snow from \"../../../assets/weather-icons/snowy.svg\";\r\nimport clearDay from \"../../../assets/weather-icons/sun.svg\";\r\n\r\nconst MainForecast = ({ weather: { description, main }, temp, feels_like }) => {\r\n  let img;\r\n\r\n  switch (main) {\r\n    case \"Clouds\":\r\n      img = cloudyDay;\r\n      break;\r\n\r\n    case \"Thunderstorm\":\r\n      img = thunder;\r\n      break;\r\n\r\n    case \"Drizzle\":\r\n      img = drizzle;\r\n      break;\r\n\r\n    case \"Rain\":\r\n      img = rainy;\r\n      break;\r\n\r\n    case \"Snow\":\r\n      img = snow;\r\n      break;\r\n\r\n    case \"Clear\":\r\n      img = clearDay;\r\n      break;\r\n\r\n    default:\r\n      img = clearDay;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={s.main_forecast_wrap}>\r\n      <div className={s.temp_description_wrap}>\r\n        <div className={s.temp}>\r\n          <CountUp duration={0.5} delay={0} end={temp} />\r\n          <span className={s.celsius}>°C</span>\r\n        </div>\r\n        <div id=\"description\" className={s.description}>\r\n          <div>Feels like {Math.round(feels_like)}°C,</div>\r\n          <div>{description}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.icon_wrap}>\r\n        <img id=\"weather_icon\" src={img} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainForecast;\r\n","import React from \"react\";\r\nimport s from \"./TimeSetter.module.css\";\r\nimport Slider from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst TimeSetter = ({ setCurrentTimeData, timeMarks, timeIndex }) => {\r\n  let [timeIndexLocal, setTimeIndexLocal] = useState(timeIndex);\r\n\r\n  const onTimeChange = (value) => {\r\n    setTimeIndexLocal(value);\r\n    setCurrentTimeData(value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.time_setter_wrap}>\r\n      <Slider\r\n        onChange={onTimeChange}\r\n        min={0}\r\n        max={Object.keys(timeMarks).length - 1}\r\n        marks={timeMarks}\r\n        step={null}\r\n        value={timeIndexLocal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeSetter;\r\n","import React, { useEffect } from \"react\";\r\nimport s from \"./ForecastContainer.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCurrentForecastData,\r\n  getRandomQuoteData,\r\n  getTimeMarks,\r\n  getTimeIndex,\r\n  getBurgerIsActive,\r\n} from \"../../utils/selectors\";\r\nimport DetailedForecast from \"./DetailedForecast/DetailedForecast\";\r\nimport MainForecast from \"./MainForecast/MainForecast\";\r\nimport TimeSetter from \"./TimeSetter/TimeSetter\";\r\nimport { setCurrentTimeData } from \"../../redux/forecastReducer\";\r\nimport classNames from \"classnames\";\r\nimport { appAnimation } from \"../../utils/animation\";\r\n\r\nconst ForecastContainer = ({\r\n  currentForecastData: { weather, temp, feels_like, pressure, humidity, wind },\r\n  randomQuote,\r\n  timeIndex,\r\n  timeMarks,\r\n  setCurrentTimeData,\r\n  burgerIsActive,\r\n}) => {\r\n  useEffect(() => {\r\n    appAnimation();\r\n  },[weather]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(s.forecast_wrap, {\r\n        [s.lock]: burgerIsActive,\r\n      })}\r\n    >\r\n      <MainForecast weather={weather} temp={temp} feels_like={feels_like} />\r\n      <DetailedForecast\r\n        pressure={pressure}\r\n        humidity={humidity}\r\n        wind={wind}\r\n        randomQuote={randomQuote}\r\n      />\r\n      <TimeSetter\r\n        timeIndex={timeIndex}\r\n        timeMarks={timeMarks}\r\n        setCurrentTimeData={setCurrentTimeData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentForecastData: getCurrentForecastData(state),\r\n    randomQuote: getRandomQuoteData(state),\r\n    timeMarks: getTimeMarks(state),\r\n    timeIndex: getTimeIndex(state),\r\n    burgerIsActive: getBurgerIsActive(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setCurrentTimeData })(\r\n  ForecastContainer\r\n);\r\n","import animate from \"animateplus\";\r\n\r\nexport const appAnimation = () => {\r\n  animate({\r\n    elements: [\r\n      document.getElementById(\"detailed_forecast\"),\r\n      document.getElementById(\"description\"),\r\n      document.getElementById(\"weather_icon\"),\r\n    ],\r\n    easing: \"out-quartic\",\r\n    duration: 1000,\r\n    opacity: [0, 1],\r\n    transform: [\"translateY(30px)\", 0],\r\n  }).then(() =>\r\n    animate({\r\n      elements: document.getElementById(\"weather_icon\"),\r\n      easing: \"linear\",\r\n      duration: 2000,\r\n      loop: true,\r\n      transform: [\"translateY(0px)\", 20],\r\n      direction: \"alternate\",\r\n    })\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/HeaderContainer/HeaderContainer\";\nimport NavBarContainer from \"./components/NavBarContainer/NavBarContainer\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/common/Loader\";\nimport { getErrorMessage, getInitialized } from \"./utils/selectors\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport ForecastContainer from \"./components/ForecastContainer/ForecastContainer\";\n\nconst App = ({ initialized, initializeApp, errorMessage }) => {\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((data) => {\n      initializeApp(data.coords.latitude, data.coords.longitude);\n    });\n  }, [initializeApp]);\n\n  return (\n    <>\n      {!initialized ? (\n        <Loader />\n      ) : (\n        <div className=\"app-wrapper\">\n          <HeaderContainer errorMessage={errorMessage} />\n          <NavBarContainer />\n          <ForecastContainer />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: getInitialized(state),\n    errorMessage: getErrorMessage(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initializeApp,\n})(App);\n","import { combineReducers, applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\nimport forecastReducer from \"./forecastReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  forecast: forecastReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}